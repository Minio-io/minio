// Code generated by "stringer -type=scannerMetric -trimprefix=scannerMetric data-scanner-metric.go"; DO NOT EDIT.

package cmd

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[scannerMetricReadDir-0]
	_ = x[scannerMetricReadMetadata-1]
	_ = x[scannerMetricCheckMissing-2]
	_ = x[scannerMetricSaveUsage-3]
	_ = x[scannerMetricApplyAll-4]
	_ = x[scannerMetricApplyVersion-5]
	_ = x[scannerMetricTierObjSweep-6]
	_ = x[scannerMetricHealCheck-7]
	_ = x[scannerMetricILM-8]
	_ = x[scannerMetricCheckReplication-9]
	_ = x[scannerMetricYield-10]
	_ = x[scannerMetricLastRealtime-11]
	_ = x[scannerMetricScanCycle-12]
	_ = x[scannerMetricScanBucketDisk-13]
	_ = x[scannerMetricScanFolder-14]
	_ = x[scannerMetricScanObject-15]
	_ = x[scannerMetricLast-16]
}

const _scannerMetric_name = "ReadDirReadMetadataCheckMissingSaveUsageApplyAllApplyVersionTierObjSweepHealCheckILMCheckReplicationYieldLastRealtimeScanCycleScanBucketDiskScanFolderScanObjectLast"

var _scannerMetric_index = [...]uint8{0, 7, 19, 31, 40, 48, 60, 72, 81, 84, 100, 105, 117, 126, 140, 150, 160, 164}

func (i scannerMetric) String() string {
	if i >= scannerMetric(len(_scannerMetric_index)-1) {
		return "scannerMetric(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _scannerMetric_name[_scannerMetric_index[i]:_scannerMetric_index[i+1]]
}
